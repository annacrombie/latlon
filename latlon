#!/bin/zsh

locate_ip() {
  typeset key=$(pass api_keys/ipify)
  typeset tmp=$(mktemp)

  curl -sS "https://geo.ipify.org/api/v1?apiKey=${key}" \
    | jq -M '. | {
    "ip": .ip,
    "lat": .location.lat,
    "lon": .location.lng,
    "str": "\(.location.city), \(.location.region), \(.location.country)",
    "src": .
  }' > "$tmp"

  typeset ll=$(jq -Mr '"\(.lat),\(.lon)"' < "$tmp")
  typeset ret="${dir}/cache/${ll}"

  mv "$tmp" "$ret"
  ln -srf "$ret" "${dir}/current"
}

locate_query() {
  typeset args="$@"
  typeset api="https://nominatim.openstreetmap.org/search"
  typeset tmp=$(mktemp)

  curl -sS "${api}?format=json&q=${args// /+}"  \
    | jq -Mr '.[0] | {
    "ip": null,
    "lat": .lat,
    "lon": .lon,
    "str": "\(.display_name)",
    "src": .
  }' > "$tmp"

  typeset ll=$(jq -Mr '"\(.lat),\(.lon)"' < "$tmp")
  typeset ret="${dir}/cache/${ll}"

  mv "$tmp" "$ret"
  ln -srf "$ret" "$cur"
}

locate_ll() {
  typeset args="lat=$1&lon=$2&format=json"
  typeset api="https://nominatim.openstreetmap.org/reverse"
  typeset tmp=$(mktemp)

  curl -sS "$api?$args" \
    | jq -Mr '. | {
    "ip": null,
    "lat": .lat,
    "lon": .lon,
    "str": "\(.display_name)",
    "src": .
  }' > "$tmp"

  typeset ll=$(jq -Mr '"\(.lat),\(.lon)"' < "$tmp")
  typeset ret="${dir}/cache/${ll}"

  mv "$tmp" "$ret"
  ln -srf "$ret" "${dir}/current"
}

cord_list() {
  typeset -ga ret=()

  for pos in ${cdir}/*; do
    ret+="$pos"
  done
}

cord_list_disp() {
  typeset arr=($@)
  typeset i=1
  typeset prefix

  for pos in $arr; do
    [[ "${pos:t}" = "${cur:A:t}" ]] && typeset selected=true

    prefix=" "
    [[ $selected ]] && prefix="*"

    printf "%2d%s %9.4f, %9.4f | %s\n" \
      "$i"                        \
      "$prefix"                   \
      "${(s:,:)${pos:t}}"         \
      "$(jq -Mr '.str' < "$pos")"

    [[ ! -t 1 ]] && echo "$pos"

    ((i++))
    unset selected
  done
}

display_cur() {
  echo "$(jq -Mr '"\(.str), \(.lat), \(.lon)"' < "$cur")"
}

typeset -g dir="${XDG_DATA_HOME:-$HOME/.local/share}/latlon"
typeset -g cdir="${dir}/cache"
typeset -g cur="${dir}/current"

mkdir -p "$dir"
mkdir -p "$cdir"

typeset -g mode=get

case $1 in
  q | query) mode=query;;
  ip) mode=ip;;
  c | cur | current) mode=cur;;
  l | list) mode=list;;
  s | sel) mode=sel;;
  v | vis) mode=vis;;
  r | rev) mode=rev;;
  *) cat<<EOF
usage: latlon <cmd>

COMMANDS:
update - update your coordinates
query  - geocode an address
get    - echo your coordinates
EOF
    exit;;
esac

case $mode in
  ip)
    locate_ip
    display_cur
    ;;
  rev)
    typeset lat=$2
    typeset lon=$3
    locate_ll $lat $lon
    display_cur
    ;;
  query)
    shift
    locate_query $@
    display_cur
    ;;
  vis)
    cord_list
    sel=$(cord_list_disp $ret | fzfl --reverse)
    ln -srf "$sel" "$cur"

    echo -n "selected: "
    display_cur
    ;;
  sel)
    cord_list
    typeset sel="$2"

    if [[ ($((sel+0)) != $sel || $sel -gt $#ret || $sel -lt 1) ]]; then
      echo "please enter a valid number"
      exit 1
    fi

    ln -srf "${ret[$sel]}" "$cur"

    echo -n "selected: "
    display_cur
    ;;
  list)
    cord_list
    cord_list_disp $ret
    ;;
  cur)
    #[[ ! -f "$file" ]] && { echo "no data"; exit 1 }
    jq -Mr '"\(.lat),\(.lon)"' "${dir}/current"
    ;;
esac
